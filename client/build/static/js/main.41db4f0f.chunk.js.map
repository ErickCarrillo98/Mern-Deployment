{"version":3,"sources":["components/CreateForm.jsx","components/ListComponent.jsx","components/Detail.jsx","components/Edit.jsx","App.js","reportWebVitals.js","index.js"],"names":["CreateForm","props","useState","name","type","description","skill","skill2","skill3","formState","setFormState","validState","setValidState","changeHandler","e","target","value","to","onSubmit","preventDefault","axios","post","then","res","navigate","catch","err","errors","response","data","errorObj","Object","entries","key","message","id","onChange","ListComponent","listState","setListState","useEffect","get","allPets","console","log","map","pet","i","_id","Detail","pet_id","setPet","onClick","delete","deleteHandler","Edit","put","App","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA4EeA,EAvEI,SAAAC,GAEf,MAAkCC,mBAAS,CACvCC,KAAK,GACLC,KAAK,GACLC,YAAY,GACZC,MAAO,GACPC,OAAO,GACPC,OAAO,KANX,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,SAAAC,GAClBJ,EAAa,2BACND,GADK,kBAEPK,EAAEC,OAAOZ,KAAQW,EAAEC,OAAOC,UAkBnC,OACA,gCACI,4DACA,cAAC,IAAD,CAAMC,GAAG,IAAT,0BACA,uBAAMC,SAlBY,SAAAJ,GAClBA,EAAEK,iBACFC,IAAMC,KAAK,qCAAsCZ,GAC5Ca,MAAK,SAAAC,GAAG,OAAIC,YAAS,QACrBC,OAAM,SAAAC,GAGH,IAFA,IAAOC,EAAUD,EAAIE,SAASC,KAAvBF,OACHG,EAAW,GACf,MAAwBC,OAAOC,QAAQL,GAAvC,eAA+C,CAA3C,0BAAKM,EAAL,KAAUjB,EAAV,KACAc,EAASG,GAAOjB,EAAMkB,QAE1BtB,EAAckB,OAQtB,UACI,0CACI,uBAAO1B,KAAK,OAAOD,KAAK,OAAOgC,GAAG,GAAGC,SAAUvB,IAC7CF,EAAWR,KAAQ,4BAAIQ,EAAWR,OAAW,QAEnD,0CACI,uBAAOC,KAAK,OAAOD,KAAK,OAAOgC,GAAG,GAAGC,SAAUvB,IAC7CF,EAAWP,KAAQ,4BAAIO,EAAWP,OAAW,QAEnD,iDACI,uBAAOA,KAAK,OAAOD,KAAK,cAAcgC,GAAG,GAAGC,SAAUvB,IACpDF,EAAWN,YAAe,4BAAIM,EAAWN,cAAkB,QAEjE,mDACA,0CACI,uBAAOD,KAAK,OAAOD,KAAK,QAAQgC,GAAG,GAAGC,SAAUvB,OAGpD,0CACI,uBAAOT,KAAK,OAAOD,KAAK,SAASgC,GAAG,GAAGC,SAAUvB,OAGrD,0CACI,uBAAOT,KAAK,OAAOD,KAAK,SAASgC,GAAG,GAAGC,SAAUvB,OAGrD,wBAAQT,KAAK,SAAb,4BCfGiC,EAlDO,SAAApC,GAElB,MAAkCC,mBAAS,IAA3C,mBAAOoC,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WACNpB,IAAMqB,IAAI,kCACLnB,MAAK,SAAAC,GAAG,OAAIgB,EAAahB,EAAIM,KAAKa,YAClCjB,OAAM,SAAAC,GAAG,OAAIiB,QAAQC,IAAIlB,QAEhC,IAGF,gCACI,sCACA,cAAC,IAAD,CAAMT,GAAG,YAAT,sCACA,wEACA,gCACI,+BACI,+BACI,sCACA,sCACA,4CAEJ,gCAEIqB,EAAUO,KAAI,SAACC,EAAKC,GAChB,OACI,+BACI,6BAAKD,EAAI3C,OACT,6BAAK2C,EAAI1C,OACT,+BACI,cAAC,IAAD,CAAMa,GAAE,gBAAW6B,EAAIE,KAAvB,qBADJ,KAEI,cAAC,IAAD,CAAM/B,GAAE,gBAAW6B,EAAIE,IAAf,SAAR,uBALCD,iBCMtBE,EAhCA,SAAAhD,GAEX,IAAOiD,EAAUjD,EAAViD,OAEP,EAAsBhD,mBAAS,IAA/B,mBAAO4C,EAAP,KAAYK,EAAZ,KAGAX,qBAAU,WACNpB,IAAMqB,IAAN,yCAA4CS,IACvC5B,MAAK,SAAAC,GAAG,OAAI4B,EAAO5B,EAAIM,SACvBJ,OAAM,SAAAC,GAAG,OAAIiB,QAAQC,IAAIlB,QAC/B,IAQH,OACA,gCACI,gDAAmBoB,EAAI3C,KAAvB,OACA,cAAC,IAAD,CAAMc,GAAG,IAAT,0BACA,yBAAQmC,QAAS,kBAVC,SAAAF,GAClB9B,IAAMiC,OAAO,kCAAoCH,GAC5C5B,MAAK,SAAAC,GAAG,OAAIC,YAAS,QACrBC,OAAM,SAAAC,GAAG,OAAIiB,QAAQC,IAAIlB,MAOP4B,CAAcR,EAAIE,MAAzC,mBAAsDF,EAAI3C,QAC1D,2CAAc2C,EAAI1C,QAClB,8CAAiB0C,EAAIzC,eACrB,yCAAYyC,EAAIxC,MAAhB,IAAwBwC,EAAIvC,OAA5B,IAAqCuC,EAAItC,cCwDlC+C,EAnFF,SAAAtD,GAET,IAAOiD,EAAUjD,EAAViD,OAEP,EAAkChD,mBAAS,CACvCC,KAAK,GACLC,KAAK,GACLC,YAAY,GACZC,MAAO,GACPC,OAAO,GACPC,OAAO,KANX,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEA4B,qBAAU,WACNpB,IAAMqB,IAAN,yCAA4CS,IACvC5B,MAAK,SAAAC,GAAG,OAAIb,EAAaa,EAAIM,SAC7BJ,OAAM,SAAAC,GAAG,OAAIiB,QAAQC,IAAIlB,QAChC,IAEF,IAAMb,EAAgB,SAAAC,GAClBJ,EAAa,2BACND,GADK,kBAEPK,EAAEC,OAAOZ,KAAQW,EAAEC,OAAOC,UAmBnC,OACI,gCACI,4DACA,cAAC,IAAD,CAAMC,GAAG,IAAT,0BACA,uBAAMC,SAnBQ,SAAAJ,GAClBA,EAAEK,iBACFC,IAAMoC,IAAI,kCAAmCN,EAAQzC,GAChDa,MAAK,SAAAC,GAAG,OAAIC,YAAS,SAAD,OAAU0B,OAC9BzB,OAAM,SAAAC,GAGH,IAFA,IAAOC,EAAUD,EAAIE,SAASC,KAAvBF,OACHG,EAAW,GACf,MAAwBC,OAAOC,QAAQL,GAAvC,eAA+C,CAA3C,0BAAKM,EAAL,KAAUjB,EAAV,KACAc,EAASG,GAAOjB,EAAMkB,QAE1BtB,EAAckB,OASlB,UACI,0CACI,uBAAO1B,KAAK,OAAOD,KAAK,OAAOgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUN,OAC7EQ,EAAWR,KAAQ,4BAAIQ,EAAWR,OAAW,QAGnD,0CACI,uBAAOC,KAAK,OAAOD,KAAK,OAAOgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUL,OAC7EO,EAAWP,KAAQ,4BAAIO,EAAWP,OAAW,QAGnD,iDACI,uBAAOA,KAAK,OAAOD,KAAK,cAAcgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUJ,cACpFM,EAAWN,YAAe,4BAAIM,EAAWN,cAAkB,QAGjE,mDACA,0CACI,uBAAOD,KAAK,OAAOD,KAAK,QAAQgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUH,WAGpF,0CACI,uBAAOF,KAAK,OAAOD,KAAK,SAASgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUF,YAGrF,0CACI,uBAAOH,KAAK,OAAOD,KAAK,SAASgC,GAAG,GAAGC,SAAUvB,EAAeG,MAAOP,EAAUD,YAGrF,wBAAQJ,KAAK,SAAb,6B,MC1DDqD,MAdf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAeC,KAAK,MACpB,cAAC,EAAD,CAAYA,KAAK,cACjB,cAAC,EAAD,CAAQA,KAAK,kBACb,cAAC,EAAD,CAAMA,KAAK,8BCJJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.41db4f0f.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport axios from \"axios\"\nimport {Link, navigate} from \"@reach/router\"\n\n\nconst CreateForm = props => {\n\n    const [formState, setFormState] = useState({\n        name:\"\",\n        type:\"\",\n        description:\"\",\n        skill: \"\",\n        skill2:\"\",\n        skill3:\"\"\n    })\n\n    const [validState, setValidState] = useState({})\n\n    const changeHandler = e => {\n        setFormState({\n            ...formState,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n        axios.post(\"http://localhost:8000/api/pets/new\", formState)\n            .then(res => navigate(\"/\"))\n            .catch(err => {\n                const {errors} = err.response.data\n                let errorObj = {}\n                for(let [key, value] of Object.entries(errors)){\n                    errorObj[key] = value.message\n                }\n                setValidState(errorObj)\n            })\n    }\n\n    return(\n    <div>\n        <h3>Know a pet needing a home?</h3>\n        <Link to=\"/\">Back to Home</Link>\n        <form onSubmit={submitHandler}>\n            <p>Pet Name:\n                <input type=\"text\" name=\"name\" id=\"\" onChange={changeHandler}/>\n                {(validState.name) ? <p>{validState.name}</p>: null}\n            </p>\n            <p>Pet Type:\n                <input type=\"text\" name=\"type\" id=\"\" onChange={changeHandler}/>\n                {(validState.type) ? <p>{validState.type}</p>: null}\n            </p>\n            <p>Pet Description:\n                <input type=\"text\" name=\"description\" id=\"\" onChange={changeHandler}/>\n                {(validState.description) ? <p>{validState.description}</p>: null}\n            </p>\n            <p>SKILLS (Optional) </p>\n            <p>Skills 1:\n                <input type=\"text\" name=\"skill\" id=\"\" onChange={changeHandler}/>\n                \n            </p>\n            <p>Skills 2:\n                <input type=\"text\" name=\"skill2\" id=\"\" onChange={changeHandler}/>\n                \n            </p>\n            <p>Skills 3:\n                <input type=\"text\" name=\"skill3\" id=\"\" onChange={changeHandler}/>\n                \n            </p>\n            <button type=\"submit\">Add Pet</button>\n        </form>\n    </div>\n\n    )\n\n}\nexport default CreateForm","import React, {useState, useEffect} from 'react'\nimport {Link} from \"@reach/router\"\nimport axios from \"axios\"\n\nconst ListComponent = props => {\n\n    const [listState, setListState] = useState([])\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res => setListState(res.data.allPets))\n            .catch(err => console.log(err))\n\n    },[])\n\n    return(\n    <div>\n        <h1>List</h1>\n        <Link to=\"/pets/new\">Add a pet to the Shelter</Link>\n        <h3>These pets are looking for a good home</h3>\n        <table>\n            <th>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Actions</th>\n                </tr>\n                <tbody>\n                {\n                    listState.map((pet, i) => {\n                        return(\n                            <tr key={i}>\n                                <td>{pet.name}</td>\n                                <td>{pet.type}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>Details</Link> | \n                                    <Link to={`/pets/${pet._id}/edit`}>Edit</Link>\n                                    \n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n\n                </tbody>\n            </th>\n        </table>\n\n\n    </div>\n\n    )\n\n}\nexport default ListComponent","import React, {useEffect, useState} from \"react\"\nimport {Link, navigate} from \"@reach/router\"\nimport axios from \"axios\"\n\n\nconst Detail = props => {\n\n    const {pet_id} = props\n\n    const [pet, setPet] = useState({})\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${pet_id}`)\n            .then(res => setPet(res.data))\n            .catch(err => console.log(err))\n    }, [])\n\n    const deleteHandler = pet_id => {\n        axios.delete(\"http://localhost:8000/api/pets/\" + pet_id)\n            .then(res => navigate(\"/\"))\n            .catch(err => console.log(err))\n    }\n\n    return(\n    <div>\n        <h1>Details about {pet.name} </h1>\n        <Link to=\"/\">Back to home</Link>\n        <button onClick={() => deleteHandler(pet._id)}>Adopt {pet.name}</button>\n        <p>Pet Type: {pet.type}</p>\n        <p>Description: {pet.description}</p>\n        <p>Skills: {pet.skill} {pet.skill2} {pet.skill3}</p>\n\n    </div>\n\n    )\n}\nexport default Detail","import React, {useState, useEffect} from 'react'\nimport axios from \"axios\"\nimport {Link, navigate} from \"@reach/router\"\n\nconst Edit = props => {\n\n    const {pet_id} = props\n\n    const [formState, setFormState] = useState({\n        name:\"\",\n        type:\"\",\n        description:\"\",\n        skill: \"\",\n        skill2:\"\",\n        skill3:\"\"\n    })\n\n    const [validState, setValidState] = useState({})\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${pet_id}`)\n            .then(res => setFormState(res.data))\n            .catch(err => console.log(err))\n    },[])\n\n    const changeHandler = e => {\n        setFormState({\n            ...formState,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n        axios.put(\"http://localhost:8000/api/pets/\"+ pet_id, formState)\n            .then(res => navigate(`/pets/${pet_id}`))\n            .catch(err => {\n                const {errors} = err.response.data\n                let errorObj = {}\n                for(let [key, value] of Object.entries(errors)){\n                    errorObj[key] = value.message\n                }\n                setValidState(errorObj)\n            })\n    }\n\n\n    return(\n        <div>\n            <h3>Know a pet needing a home?</h3>\n            <Link to=\"/\">Back to Home</Link>\n            <form onSubmit={submitHandler}>\n                <p>Pet Name:\n                    <input type=\"text\" name=\"name\" id=\"\" onChange={changeHandler} value={formState.name}/>\n                    {(validState.name) ? <p>{validState.name}</p>: null}\n\n                </p>\n                <p>Pet Type:\n                    <input type=\"text\" name=\"type\" id=\"\" onChange={changeHandler} value={formState.type}/>\n                    {(validState.type) ? <p>{validState.type}</p>: null}\n\n                </p>\n                <p>Pet Description:\n                    <input type=\"text\" name=\"description\" id=\"\" onChange={changeHandler} value={formState.description}/>\n                    {(validState.description) ? <p>{validState.description}</p>: null}\n\n                </p>\n                <p>SKILLS (Optional) </p>\n                <p>Skills 1:\n                    <input type=\"text\" name=\"skill\" id=\"\" onChange={changeHandler} value={formState.skill}/>\n                    \n                </p>\n                <p>Skills 2:\n                    <input type=\"text\" name=\"skill2\" id=\"\" onChange={changeHandler} value={formState.skill2}/>\n                    \n                </p>\n                <p>Skills 3:\n                    <input type=\"text\" name=\"skill3\" id=\"\" onChange={changeHandler} value={formState.skill3}/>\n                    \n                </p>\n                <button type=\"submit\">Edit Pet</button>\n            </form>\n        </div>\n    \n        )\n\n}\nexport default Edit","import {Router} from \"@reach/router\";\nimport CreateForm from \"./components/CreateForm\"\nimport ListComponent from \"./components/ListComponent\"\nimport Detail from \"./components/Detail\"\nimport Edit from \"./components/Edit\"\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <ListComponent path=\"/\" />\n        <CreateForm path=\"/pets/new\" />\n        <Detail path=\"/pets/:pet_id\" />\n        <Edit path=\"/pets/:pet_id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}